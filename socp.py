import numpy
import matplotlib.pyplot as plt
from cvxopt import matrix, solvers

if (0):
	#==================================================================================================#
	#==========================================SET UP==================================================#
	#==================================================================================================#

	#===Form Cost Vector===#
	f = numpy.asmatrix([-2.0, 1.0, 5.0]).T;
	f = matrix(f);

	#===Make Response Matrices===#
	A1 = numpy.matrix( [[-13.0, 3.0, 5.0], [-12.0, 12.0, -6.0]] );
	A2 = numpy.matrix( [[-3.0, 6.0, 2.0], [1.0, 9.0, 2.0], [-1.0, -19.0, 3.0]]);

	#===Make Desired===#
	b1 = numpy.matrix([-3.0, -2.0]).T;
	b2 = numpy.matrix([0.0, 3.0, -42.0]).T;

	#===Make c vectors===#
	c1 = numpy.matrix([-12.0, -6.0, 5.0]).T;
	c2 = numpy.matrix([-3.0, 6.0, -10.0]).T;

	#===Make d===#
	d1 = numpy.matrix([-12.0]).T;
	d2 = numpy.matrix([27.0]).T;


	#==================================================================================================#
	#=========================================CONVERSION===============================================#
	#==================================================================================================#

	#===Form Block Matrices===#
	G1 = (numpy.r_[-c1.T, -A1]);
	G2 = (numpy.r_[-c2.T, -A2]);
	G = [matrix(G1)];
	G += [matrix(G2)];

	#===Form Block Vectors===#
	h1 = numpy.r_[d1, b1];
	h2 = numpy.r_[d2, b2];
	h = [matrix(h1)];
	h += [matrix(h2)];

	#===Solve===#
	sol = solvers.socp(f, Gq=G, hq=h);
	print sol['status'];
	print sol['x'];

#==================================================================================================#
#==========================================SET UP==================================================#
#==================================================================================================#

#===Form Cost Vector===#
f = numpy.asmatrix([-2.0, 1.0, 5.0]).T;
f = matrix(f);

#===Make Response Matrices===#
As = [ numpy.matrix( [[-13.0, 3.0, 5.0], [-12.0, 12.0, -6.0]] ), numpy.matrix( [[-3.0, 6.0, 2.0], [1.0, 9.0, 2.0], [-1.0, -19.0, 3.0]])];

#===Make Desired===#
bs = [numpy.matrix([-3.0, -2.0]).T, numpy.matrix([0.0, 3.0, -42.0]).T];

#===Make cs===#
cs = [numpy.matrix([-12.0, -6.0, 5.0]).T, numpy.matrix([-3.0, 6.0, -10.0]).T];

#===Make ds===#
ds = [numpy.matrix([-12.0]).T, numpy.matrix([27.0]).T];


#==================================================================================================#
#=========================================CONVERSION===============================================#
#==================================================================================================#

#===Form Block Matrices===#
Gs = [];
for a in range(len(As)):
	G1 = (numpy.r_[-cs[a].T, -As[a]]);
 	Gs.append(matrix(G1));
G = (lambda x, y: x+y, Gs)[1];

#===Form Block Vectors===#
hs = [];
for b in range(len(bs)):
	h1 = (numpy.r_[ds[b], bs[b]]);
 	hs.append(matrix(h1));
h = (lambda x, y: x+y, hs)[1];

#===Solve===#
sol = solvers.socp(f, Gq=G, hq=h);
print sol['status'];
print sol['x'];
